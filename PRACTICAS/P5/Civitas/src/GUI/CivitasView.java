/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import civitas.OperacionInmobiliaria;
import civitas.OperacionJuego;
import controladorCivitas.Respuesta;
import civitas.CivitasJuego;
import civitas.Jugador;
import javax.swing.JOptionPane;
import civitas.Diario;

import java.util.ArrayList;
/**
 *
 * @author albertollamasgonzalez
 */
public class CivitasView extends javax.swing.JFrame implements Vista {

    /**
     * Creates new form CivitasView
     */
    public CivitasView() {
        initComponents();
        DiarioDialog.createInstance(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        jugadorPanel1 = new GUI.JugadorPanel();
        fieldCasillaActual = new javax.swing.JTextField();
        labelCasillaActual = new javax.swing.JLabel();
        labelSiguienteOp = new javax.swing.JLabel();
        fieldSigOp = new javax.swing.JTextField();
        labelRanking = new javax.swing.JLabel();
        fieldRanking = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Titulo.setText("Civitas");

        fieldCasillaActual.setEditable(false);
        fieldCasillaActual.setText("casilla");
        fieldCasillaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCasillaActualActionPerformed(evt);
            }
        });

        labelCasillaActual.setText("Casilla actual");

        labelSiguienteOp.setText("Siguiente operacion");

        fieldSigOp.setEditable(false);
        fieldSigOp.setText("siguiente");

        labelRanking.setText("Ranking");

        fieldRanking.setEditable(false);
        fieldRanking.setText("ranking");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(Titulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jugadorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fieldRanking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(labelCasillaActual)
                                            .addComponent(labelRanking))
                                        .addGap(24, 24, 24)
                                        .addComponent(fieldCasillaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGap(18, 18, 18)
                                .addComponent(labelSiguienteOp)
                                .addGap(18, 18, 18)
                                .addComponent(fieldSigOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(512, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titulo)
                .addGap(18, 18, 18)
                .addComponent(jugadorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCasillaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCasillaActual)
                    .addComponent(labelSiguienteOp)
                    .addComponent(fieldSigOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRanking)
                    .addComponent(fieldRanking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldCasillaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCasillaActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCasillaActualActionPerformed

    /**
     * @param args the command line arguments
     */

    @Override
    public void actualiza() {
        this.labelRanking.setVisible(false);
        this.fieldRanking.setVisible(false);
        Jugador actual = this.juego.getJugadorActual();
        jugadorPanel1.setJugador(actual);
        this.fieldCasillaActual.setText(this.juego.getTablero().getCasilla(actual.getCasillaActual()).getNombre());
        
        if (this.juego.finalDelJuego()){
            this.labelRanking.setVisible(true);
            this.fieldRanking.setVisible(true);
            String ranking = "";
            for (int i = 0; i < this.juego.getJugadores().size(); i++){
              ranking = ranking.concat("Jugador " + i + ": " + this.juego.ranking().get(i).getNombre() + "\n");
          }
            this.fieldRanking.setText(ranking);
        }
        repaint();
        revalidate();
    }
    
    @Override
    public void mostrarSiguienteOperacion(OperacionJuego operacion) {
        this.fieldSigOp.setText(operacion.toString());
        if (operacion == OperacionJuego.AVANZAR){
            Dado.createInstance(this);
        }
        repaint();
        revalidate();
    }

    @Override
    public void pausa() {
        int val= JOptionPane.showConfirmDialog(null, "¿Continuar?",
         "Siguiente paso", JOptionPane.YES_NO_OPTION);
                if (val==1) System.exit(0);    }

    @Override
    public Respuesta comprar() {
        int opcion = 1- JOptionPane.showConfirmDialog(null, "¿Quieres comprar la calle actual?", "Compra", JOptionPane.YES_NO_OPTION);
        return Respuesta.values()[opcion];
    }

    @Override
    public OperacionInmobiliaria elegirOperacion() {
        GestionarDialog gestionD = new GestionarDialog(this);
        
        int operacion = gestionD.getGestion();
        
        return OperacionInmobiliaria.values()[operacion];
    }

    @Override
    public int elegirPropiedad() {
        PropiedadDialog propiedadD = new PropiedadDialog(this, this.juego.getJugadorActual());
        int propiedad = propiedadD.getPropiedad();
        return propiedad;
    }

    @Override
    public void mostrarEventos() {
        DiarioDialog diarioD;
        if (!Diario.getInstance().getEventos().isEmpty())
            diarioD = new DiarioDialog(this);
    }
    
    public void setCivitasJuego(CivitasJuego j){
        this.juego = j;
        this.setVisible(true);
    }
    
    private CivitasJuego juego;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JTextField fieldCasillaActual;
    private javax.swing.JTextField fieldRanking;
    private javax.swing.JTextField fieldSigOp;
    private GUI.JugadorPanel jugadorPanel1;
    private javax.swing.JLabel labelCasillaActual;
    private javax.swing.JLabel labelRanking;
    private javax.swing.JLabel labelSiguienteOp;
    // End of variables declaration//GEN-END:variables
}
